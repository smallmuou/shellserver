#!/bin/bash
#
# Copyright (C) 2018 smallmuou <smallmuou@163.com>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is furnished
# to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

set -e

spushd() {
     pushd "$1" 2>&1> /dev/null
}

spopd() {
     popd 2>&1> /dev/null
}

info() {
     local green="\033[1;32m"
     local normal="\033[0m"
     echo -e "[${green}INFO${normal}] $1"
}

cmdcheck() {
    command -v $1>/dev/null 2>&1 || { error >&2 "Please install command $1 first."; exit 1; }   
}

error() {
     local red="\033[1;31m"
     local normal="\033[0m"
     echo -e "[${red}ERROR${normal}] $1"
}

curdir() {
    if [ ${0:0:1} = '/' ] || [ ${0:0:1} = '~' ]; then
        echo "$(dirname $0)"
    elif [ -L $0 ];then
        name=`readlink $0`
        echo $(dirname $name)
    else
        echo "`pwd`/$(dirname $0)"
    fi
}

myos() {
    echo `uname|tr "[:upper:]" "[:lower:]"`
}

#########################################
###           GROBLE DEFINE           ###
#########################################

VERSION=1.0.0
AUTHOR=smallmuou

#########################################
###             ARG PARSER            ###
#########################################

usage() {
cat << EOF
`basename $0` version $VERSION by $AUTHOR

USAGE: `basename $0` [OPTIONS] [port]

DESCRIPTION:
    startup shell server.

    port - assign http port.

OPTIONS:
    -h      Show this help message and exit
    -a      username:password

EOF
exit 1
}

while getopts 'ha:' arg; do
    case $arg in
        h)
            usage
            ;;
        a)
           username=`echo -n $OPTARG|awk -F: '{print $1}'`
           password=`echo -n $OPTARG|awk -F: '{print $2}'`
           [ -z "$username" ] && usage
           [ -z "$password" ] && usage
           ;;
        ?)
            usage
            ;;
    esac
done

shift $(($OPTIND - 1))

port=8000
[ $# -eq 1 ] && port=$1

#########################################
###            MAIN ENTRY             ###
#########################################


build() {
    os=`myos`

    if [ $os == "darwin" ];then
        os='mac'
    fi

    make -C mongoose $os
}

spushd `curdir`

bin='mongoose/mongoose'

if [ ! -f $bin ];then
    info "First time to startup, please wait for few seconds to build ..."
    build
fi

[ ! -f $bin ] && { error 'Can not build mongoose.'; exit -1; }

info 'Start shellserver... '

if [ -z "$username" ];then
    $bin -ports $port
else
    pwdfile=/tmp/.htpasswd
    rm -rf $pwdfile
    $bin -A $pwdfile localhost $username $password
    $bin -auth_gpass $pwdfile -auth_realm localhost -ports $port
fi


